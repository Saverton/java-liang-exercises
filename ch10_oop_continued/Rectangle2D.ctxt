#BlueJ class context
comment0.target=Rectangle2D
comment0.text=\r\n\ Class\ to\ define\ the\ Rectangle2D\ object\ type.\r\n\ \r\n\ @author\ Scott\ M.\r\n\ Rectangle2D.java\r\n
comment1.params=x\ y\ width\ height
comment1.target=Rectangle2D(double,\ double,\ double,\ double)
comment1.text=\r\n\ Constructor\ to\ build\ a\ rectangle\ at\ a\ specified\ center\ and\ dimensions\r\n\ \r\n\ @params\ (x\ pos\ of\ center)\ (y\ pos\ of\ center)\ (width\ of\ rectangle)\r\n\ \ \ \ \ \ \ \ \ (height\ of\ rectangle)\r\n
comment10.params=height
comment10.target=void\ setHeight(double)
comment10.text=\r\n\ Method\ to\ set\ the\ height\ of\ the\ rectangle.\r\n\ \r\n\ @params\ (new\ height\ of\ rectangle)\r\n
comment11.params=
comment11.target=double\ getArea()
comment11.text=\r\n\ Method\ to\ get\ the\ Area\ of\ the\ rectangle.\r\n\ \r\n\ @return\ (the\ area\ of\ the\ rectangle)\r\n
comment12.params=
comment12.target=double\ getPerimeter()
comment12.text=\r\n\ Method\ to\ get\ the\ perimeter\ of\ the\ rectangle.\r\n\ \r\n\ @return\ (perimeter\ of\ the\ rectangle)\r\n
comment13.params=p
comment13.target=boolean\ contains(Point)
comment13.text=\r\n\ Method\ to\ check\ if\ a\ Point\ is\ inside\ the\ rectangle.\r\n\ \r\n\ @return\ (true\:\ the\ point\ is\ inside\ the\ rect.\ false\:\ the\ point\ is\ not\ inside\r\n\ \ \ \ \ \ \ \ \ \ the\ rect.)\r\n
comment14.params=r2
comment14.target=boolean\ contains(Rectangle2D)
comment14.text=\r\n\ Method\ to\ check\ if\ a\ rectangle\ is\ contained\ inside\ this\ rectangle\r\n\ \r\n\ @params\ (the\ rectangle\ that\ is\ or\ is\ not\ inisde\ this\ one)\r\n\ @return\ (true\:\ the\ rectangle\ is\ inside\ this\ rectangle,\ false\:\ the\ rectangle\r\n\ \ \ \ \ \ \ \ \ \ is\ not\ inside\ this\ rectangle)\r\n
comment15.params=r2
comment15.target=boolean\ overlaps(Rectangle2D)
comment15.text=\r\n\ Method\ to\ check\ if\ a\ rectangle\ overlaps\ with\ this\ rectangle.\r\n\ \r\n\ @params\ (the\ rectangle\ that\ is\ or\ is\ not\ overlapping\ this\ one)\r\n\ @return\ (true\:\ the\ rectangles\ overlap,\ false\:\ the\ rectangles\ don't\ overlap)\r\n
comment2.params=
comment2.target=Rectangle2D()
comment2.text=\r\n\ Overloaded\ no-arg\ constructor\ at\ x,y\ (0,\ 0)\ with\ width\ and\ height\ of\ 1.\r\n
comment3.params=
comment3.target=double\ getX()
comment3.text=\r\n\ Method\ to\ get\ the\ x\ pos\ of\ the\ rectangle.\r\n\ \r\n\ @return\ (x\ position\ of\ rectangle)\r\n
comment4.params=x
comment4.target=void\ setX(double)
comment4.text=\r\n\ Method\ to\ set\ the\ x\ pos\ of\ the\ rectangle.\r\n\ \r\n\ @params\ (new\ x\ pos\ of\ the\ rectangle)\r\n
comment5.params=
comment5.target=double\ getY()
comment5.text=\r\n\ Method\ to\ get\ the\ y\ pos\ of\ the\ rectangle.\r\n\ \r\n\ @return\ (y\ pos\ of\ rectangle)\r\n
comment6.params=y
comment6.target=void\ setY(double)
comment6.text=\r\n\ Method\ to\ set\ the\ y\ pos\ of\ the\ rectangle.\r\n\ \r\n\ @params\ (new\ y\ pos\ of\ the\ rectangle)\r\n
comment7.params=
comment7.target=double\ getWidth()
comment7.text=\r\n\ Method\ to\ get\ the\ width\ of\ the\ rectangle.\r\n\ \r\n\ @return\ (the\ width\ of\ the\ rectangle)\r\n
comment8.params=width
comment8.target=void\ setWidth(double)
comment8.text=\r\n\ Method\ to\ set\ the\ width\ of\ the\ rectangle.\r\n\ \r\n\ @params\ (new\ width\ of\ rectangle)\r\n
comment9.params=
comment9.target=double\ getHeight()
comment9.text=\r\n\ Method\ to\ get\ the\ height\ of\ the\ rectangle.\r\n\ \r\n\ @return\ (the\ height\ of\ the\ rectangle)\r\n
numComments=16
