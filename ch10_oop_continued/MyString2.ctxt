#BlueJ class context
comment0.target=MyString2
comment0.text=\r\n\ Recreation\ of\ more\ java\ String\ methods\ in\ a\ MyString2\ class.\r\n\ \r\n\ @author\ Scott\ M.\r\n\ MyString2.java\r\n
comment1.params=s
comment1.target=MyString2(java.lang.String)
comment1.text=\r\n\ Constructor\ to\ make\ a\ MyString2\ object\r\n\ \r\n\ @params\ (String\ to\ construct\ the\ object)\r\n
comment2.params=s
comment2.target=int\ compare(java.lang.String)
comment2.text=\r\n\ Method\ to\ compare\ two\ strings,\ and\ return\ an\ int\ value\ relating\ the\r\n\ first\ unequal\ chars\ in\ the\ strings.\r\n\ \r\n\ @params\ (String\ to\ compare\ to)\r\n\ @return\ (integer\ comparison\ of\ chars)\r\n
comment3.params=start
comment3.target=MyString2\ substring(int)
comment3.text=\r\n\ Method\ to\ return\ a\ substring\ from\ a\ starting\ index\ to\ the\ end\ of\ the\r\n\ parent\ String.\r\n\ \r\n\ @params\ (starting\ index)\r\n\ @return\ (the\ substring)\r\n
comment4.params=
comment4.target=MyString2\ toUpperCase()
comment4.text=\r\n\ Method\ to\ return\ the\ string\ with\ all\ letter\ characters\ set\ to\ upper\ case.\r\n\ \r\n\ @return\ (the\ string\ in\ all\ Upper\ Case)\r\n
comment5.params=
comment5.target=char[]\ toChars()
comment5.text=\r\n\ Method\ to\ convert\ a\ MyString2\ into\ an\ array\ of\ chars.\r\n\ \r\n\ @return\ (array\ of\ chars\ representing\ the\ String)\r\n
comment6.params=b
comment6.target=MyString2\ valueOf(boolean)
comment6.text=\r\n\ Method\ to\ return\ a\ MyString2\ object\ representing\ a\ boolean\r\n\ value.\r\n\ \r\n\ @params\ (boolean\ value)\r\n\ @return\ (String\ representing\ boolean)\r\n
comment7.params=s\ regex
comment7.target=java.lang.String[]\ split(java.lang.String,\ java.lang.String)
comment7.text=\r\n\ Method\ to\ split\ a\ string\ into\ an\ array\ of\ strings\ along\ a\ specified\ regular\ expression.\r\n\ \r\n\ @params\ (String\ to\ be\ split)\ (regular\ expression\ to\ split\ string\ along,\ \r\n\ \ \ \ \ \ \ \ \ \ single\ char\ for\ 1,\ format\ "[<regex1><regex2><etc.>]"\ for\ multi)\r\n\ @returns\ (an\ array\ of\ the\ splits,\ includes\ the\ regexs)\r\n
numComments=8
